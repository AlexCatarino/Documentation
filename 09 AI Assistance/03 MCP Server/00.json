{
  "type" : "landing",
  "heading" : "MCP Server",
  "subHeading" : "Connect MCP Clients to the QuantConnect MCP Server",
  "content" : "<p>The QuantConnect Model Context Protocol (MCP) server is a bridge that connects the <a href='/docs/v2/cloud-platform/api-reference'>QuantConnect API</a> to an MCP client application on your local machine. With this setup, you can prompt a Large Language Model (LLM) and have it interact with our API on your behalf. This server equips the LLM with tools to create projects, run backtests, deploy live algorithms, and more. Our MCP integration can supercharge your existing workflow on QuantConnect and can even unlock quant trading to non-programmers. Simply prompt the LLM in layperson language and let it do the heavy lifting for you.</p>  <div class='sub-heading-content'><style>.videoWrapper {position: relative; padding-bottom: 56.25%; height: 0;} .videoWrapper iframe {position: absolute; top: 0; left: 0; width: 100%; height: 100%;}</style><div class='videoWrapper'><iframe src='https://player.vimeo.com/video/1107394484' width='640' height='360' frameborder='0' allow='autoplay; fullscreen' allowfullscreen=''></iframe></div></div> <br> <p>The following MCP clients are officially supported for the QC MCP Server. To view all the clients that work with MCP, see the <a href='https://modelcontextprotocol.io/clients#feature-support-matrix' rel='nofollow' target='_blank'>Feature support matrix</a> on the MCP website. Clients that operate from the terminal can edit files on your local machine and can run from the terminal in Visual Studio Code.</p>",
  "alsoLinks" : [],
  "featureShortDescription": {
    "01" : "Introduction to our MCP Server",
    "16" : "Claude via a terminal or Local Platform",
    "17" : "Claude via a Desktop Application",
    "18" : "GPT, Claude, or Gemini via Local Platform",

    "19" : "Windsurf via a powerful agentic AI coding assistant"



  }
}
